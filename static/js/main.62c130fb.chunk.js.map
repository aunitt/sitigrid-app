{"version":3,"sources":["Consumption.js","Customer.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Consumption","props","state","consumptions","console","log","this","setState","key","consumptionAmount","consumptionDate","Date","classes","length","listItems","map","consumption","component","scope","toString","align","Fragment","TableContainer","Paper","Table","className","aria-label","TableHead","TableBody","height","width","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","type","stroke","fillOpacity","fill","Component","Customer","customerName","Box","m","display","Typography","pt","App","AppBar","position","Toolbar","IconButton","edge","variant","createMuiTheme","primary","main","secondary","error","red","A400","background","default","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.62c130fb.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis } from 'recharts'\n\nconst useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\nconst StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);\n\nclass Consumption extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          consumptions: []\n        };\n    }\n\n    // TODO: fill out with fetchs for the proper items\n    // TODO: make the fetching async for better performance\n    componentDidMount() {\n        console.log(\"inside Consumption componentDidMount\");\n        this.setState( { consumptions: [\n            { key: 1588580730000, consumptionAmount: 75, consumptionDate: new Date(1588580730000) },\n            { key: 1588596856000, consumptionAmount: 50, consumptionDate: new Date(1588596856000) },\n            { key: 1588686856000, consumptionAmount: 100, consumptionDate: new Date(1588686856000) },\n            { key: 1588700199000, consumptionAmount: 80, consumptionDate: new Date(1588686856000) },\n            { key: 1588711539000, consumptionAmount: 95, consumptionDate: new Date(1588686856000) }\n        ]});\n    }\n\n    render () {\n        const classes = useStyles;\n\n        const consumptions = this.state.consumptions;\n        if(!consumptions)\n        { \n            console.log(\"Null consumptions\");\n            return null;\n        }\n\n        console.log(\"length = \" + consumptions.length);\n        const listItems = consumptions.map((consumption) =>\n        <StyledTableRow key={consumption.key}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n                {consumption.consumptionDate.toString()}\n            </StyledTableCell>\n            <StyledTableCell align=\"right\">\n                {consumption.consumptionAmount}\n            </StyledTableCell>\n        </StyledTableRow>\n        );\n\n        return (\n            <React.Fragment>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Date</StyledTableCell>\n                            <StyledTableCell align=\"right\">Electricity consumed</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {listItems}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ResponsiveContainer height={300} width=\"95%\">\n                <AreaChart data={consumptions}  margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>\n                    <defs>\n                        <linearGradient id=\"colorCons\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"key\" />\n                    <YAxis />\n                    <Area type=\"monotone\" dataKey=\"consumptionAmount\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorCons)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n            </React.Fragment>\n        );\n    }\n  }\n\n  export default Consumption;","import React, {Component} from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport Consumption from './Consumption';\n\nclass Customer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          customerName: \"\"\n        };\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount called');\n        this.setState({customerName: \"Ashley\"});\n    }\n\n    render () {\n      return (\n        <Box m={4} component=\"div\" display=\"block\">\n            <Typography>\n                Hello {this.state.customerName}\n            </Typography>\n            <Box pt={4}>\n            <Typography>\n                Consumption records:\n            </Typography>\n            <Consumption/>\n            </Box>\n        </Box>\n      );\n    }\n  }\n\n  export default Customer;","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport './App.css';\n\nimport Customer from './Customer';\n\nclass App extends Component {\n  render () {\n    const { classes } = this.props;\n    return (\n        <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" >\n              Sitigrid consumption\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Customer/>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}