{"version":3,"sources":["tableStyles.js","Consumption.js","Generation.js","api.js","Customer.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","container","maxHeight","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Consumption","props","useState","consumptions","setConsumptions","classes","useEffect","console","log","myConsumptions","consumptionAmount","consumptionDate","map","consumption","key","cost","Array","isArray","length","listItems","component","scope","moment","format","align","toFixed","Fragment","Typography","variant","height","width","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","name","domain","type","tickFormatter","unixTime","angle","textAnchor","labelFormatter","formatter","stroke","fillOpacity","fill","TableContainer","className","Paper","Table","stickyHeader","aria-label","TableHead","TableBody","Generation","generations","setGenerations","myGenerations","generationAmount","generationDate","generation","revenue","apiURL","Customer","Box","m","display","customerName","App","anchorEl","setAnchorEl","setCustomerName","setListItems","a","fetch","json","then","res","result","Record","value","fetchData","handleClose","AppBar","position","Toolbar","IconButton","edge","onClick","event","currentTarget","keepMounted","open","Boolean","onClose","MenuItem","Link","to","path","FormControl","NativeSelect","onChange","target","createMuiTheme","primary","main","secondary","error","red","A400","background","default","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7b8bb077.chunk.js","sourcesContent":["import { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { TableCell, TableRow } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n    table: {\n      minWidth: 400,\n    },\n    container: {\n      maxHeight: 440,\n    },\n  });\n\nexport const StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);","import React, {useState, useEffect} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, Tooltip } from 'recharts';\nimport { useStyles, StyledTableCell, StyledTableRow } from './tableStyles';\nimport moment from 'moment'\nimport { Typography } from '@material-ui/core';\n\nconst consumptionTariff = 0.09\n\nexport default function Consumption(props){\n    const [consumptions, setConsumptions] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        console.log(\"inside Consumption useEffect\");\n        const rawConsumptions = [\n            { consumptionAmount: 75, consumptionDate: 1588580730000 },\n            { consumptionAmount: 50, consumptionDate: 1588596856000 },\n            { consumptionAmount: 100, consumptionDate: 1588686856000 },\n            { consumptionAmount: 80, consumptionDate: 1588700199000 },\n            { consumptionAmount: 95, consumptionDate: 1588711539000 },\n            { consumptionAmount: 25, consumptionDate: 1589580730000 },\n            { consumptionAmount: 50, consumptionDate: 1589596856000 },\n            { consumptionAmount: 75, consumptionDate: 1589686856000 },\n            { consumptionAmount: 65, consumptionDate: 1589700199000 },\n            { consumptionAmount: 45, consumptionDate: 1589711539000 },\n            { consumptionAmount: 10, consumptionDate: 1590580730000 },\n            { consumptionAmount: 15, consumptionDate: 1590596856000 },\n            { consumptionAmount: 20, consumptionDate: 1590686856000 },\n            { consumptionAmount: 25, consumptionDate: 1590700199000 },\n            { consumptionAmount: 30, consumptionDate: 1590711539000 }  \n        ];\n        const myConsumptions = rawConsumptions.map( \n            (consumption) => ({ \n                            key: consumption.consumptionDate,\n                            consumptionAmount: consumption.consumptionAmount,\n                            consumptionDate: consumption.consumptionDate,\n                            cost: consumption.consumptionAmount * consumptionTariff\n                })\n            );\n        setConsumptions( myConsumptions );\n    }, []);\n\n    if(!Array.isArray(consumptions) || consumptions.length === 0)\n    { \n        console.log(\"Null consumptions\");\n        return null;\n    }\n\n    console.log(\"Consumptions length = \" + consumptions.length);\n    const listItems = consumptions.map((consumption) =>\n    <StyledTableRow key={consumption.key}>\n        <StyledTableCell component=\"th\" scope=\"row\">\n            {moment(consumption.consumptionDate).format('DD/MM/YY HH:mm')}\n        </StyledTableCell>\n        <StyledTableCell align=\"right\">\n            {consumption.consumptionAmount}\n        </StyledTableCell>\n        <StyledTableCell align=\"right\">\n            {consumption.cost.toFixed(2)}\n        </StyledTableCell>\n    </StyledTableRow>\n    );\n\n    return (\n        <React.Fragment>\n        <Typography variant=\"caption\">\n        <ResponsiveContainer height={350} width=\"95%\">\n            <AreaChart data={consumptions}  margin={{ top: 20, right: 30, left: 10, bottom: 60 }}>\n                <defs>\n                    <linearGradient id=\"colorCons\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis \n                    dataKey=\"consumptionDate\"\n                    name=\"Time\"\n                    domain = {['auto', 'auto']}\n                    type=\"number\"\n                    tickFormatter={(unixTime) => moment(unixTime).format('DD/MM/YY HH:mm')}\n                    angle={-45} \n                    textAnchor=\"end\"\n                />\n                <YAxis />\n                <Tooltip \n                    labelFormatter={(unixTime) => moment(unixTime).format('DD/MM/YY HH:mm')}\n                    formatter={(cost) => \"£\" + cost.toFixed(2)}\n                />\n                <Area type=\"monotone\" dataKey=\"cost\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorCons)\" />\n            </AreaChart>\n        </ResponsiveContainer>\n        </Typography>\n        <TableContainer className={classes.container} component={Paper}>\n            <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Date</StyledTableCell>\n                        <StyledTableCell align=\"right\">Electricity consumed (kWh)</StyledTableCell>\n                        <StyledTableCell align=\"right\">Cost (£)</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {listItems}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </React.Fragment>\n    );\n}\n\n","import React, {useState, useEffect} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis, Tooltip } from 'recharts';\nimport { useStyles, StyledTableCell, StyledTableRow } from './tableStyles';\nimport moment from 'moment'\n\nconst generationTariff = 0.07\n\nexport default function Generation(props) {\n    const [generations, setGenerations] = useState([]);\n    const classes = useStyles();\n\n    useEffect(() => {\n        console.log(\"inside Generation useEffect\");\n        const rawGenerations = [\n            { generationAmount: 65, generationDate: 1588580730000 },\n            { generationAmount: 75, generationDate: 1588596856000 },\n            { generationAmount: 110, generationDate: 1588686856000 },\n            { generationAmount: 70, generationDate: 1588700199000 },\n            { generationAmount: 60, generationDate: 1588710199000 },\n            { generationAmount: 45, generationDate: 1588711539000 }\n        ];\n        const myGenerations = rawGenerations.map( \n            (generation) => ({ \n                            key: generation.generationDate,\n                            generationAmount: generation.generationAmount,\n                            generationDate: generation.generationDate,\n                            revenue: generation.generationAmount * generationTariff\n                })\n            );\n        setGenerations( myGenerations );\n    }, []);\n\n    if(!Array.isArray(generations) || generations.length === 0)\n    { \n        console.log(\"Null generations\");\n        return null;\n    }\n\n    console.log(\"length = \" + generations.length);\n    const listItems = generations.map((generation) =>\n    <StyledTableRow key={generation.key}>\n        <StyledTableCell component=\"th\" scope=\"row\">\n            {moment(generation.generationDate).format('DD/MM/YY HH:mm')}\n        </StyledTableCell>\n        <StyledTableCell align=\"right\">\n            {generation.generationAmount}\n        </StyledTableCell>\n        <StyledTableCell align=\"right\">\n            {generation.revenue.toFixed(2)}\n        </StyledTableCell>\n    </StyledTableRow>\n    );\n\n    return (\n        <React.Fragment>\n        <Typography variant=\"caption\">\n        <ResponsiveContainer height={350} width=\"95%\">\n            <AreaChart data={generations}  margin={{ top: 20, right: 30, left: 10, bottom: 60 }}>\n                <defs>\n                    <linearGradient id=\"colorCons\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                    <stop offset=\"5%\" stopColor=\"#85ed7e\" stopOpacity={0.8}/>\n                    <stop offset=\"95%\" stopColor=\"#85ed7e\" stopOpacity={0}/>\n                    </linearGradient>\n                </defs>\n                <XAxis \n                    dataKey=\"generationDate\"\n                    name=\"Time\"\n                    domain = {['auto', 'auto']}\n                    type=\"number\"\n                    tickFormatter={(unixTime) => moment(unixTime).format('DD/MM/YY HH:mm')}\n                    angle={-45} \n                    textAnchor=\"end\"\n                />\n                <YAxis />\n                <Tooltip \n                    labelFormatter={(unixTime) => moment(unixTime).format('DD/MM/YY HH:mm')}\n                    formatter={(revenue) => \"£\" + revenue.toFixed(2)}\n                />\n                <Area type=\"monotone\" dataKey=\"revenue\" stroke=\"#85ed7e\" fillOpacity={1} fill=\"url(#colorCons)\" />\n            </AreaChart>\n        </ResponsiveContainer>\n        </Typography>\n        <TableContainer component={Paper}>\n            <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell>Date</StyledTableCell>\n                        <StyledTableCell align=\"right\">Electricity generated (kWh)</StyledTableCell>\n                        <StyledTableCell align=\"right\">Revenue (£)</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {listItems}\n                </TableBody>\n            </Table>\n        </TableContainer>\n        </React.Fragment>\n    );\n}\n\n","export const apiURL = \"https://ytvl64ggq6.execute-api.us-east-1.amazonaws.com/dev\";","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Customer(props) {\n    return (\n      <Box m={4} component=\"div\" display=\"block\">\n          <Typography>\n              Hello {props.customerName}\n          </Typography>\n      </Box>\n    );\n  }\n","import React, {useState, useEffect} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Menu, MenuItem, Box } from '@material-ui/core';\nimport { MemoryRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport FormControl from '@material-ui/core/FormControl';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport Consumption from './Consumption';\nimport Generation from './Generation';\nimport { apiURL } from './api.js';\nimport './App.css';\n\nimport Customer from './Customer';\n\nexport default function App(props) {\n  const[anchorEl, setAnchorEl] = useState(null);\n  const[customerName, setCustomerName] = useState(\"\")\n  const[listItems, setListItems] = useState([]);\n\n  useEffect(() => \n  {\n    async function fetchData() {\n      const res = await fetch(apiURL+\"/customers/\");\n      res\n        .json()\n        .then(res => {\n            setListItems(res.map((result) => \n               <option key={result.Record.customerName} value={result.Record.customerName}>{result.Record.customerName}</option>\n              )\n            );\n          }\n        )\n    };\n\n    fetchData();\n  }, []);\n\n  const handleMenu = event => {\n    setAnchorEl( event.currentTarget );\n  };\n\n  const handleClose = () => {\n    setAnchorEl( null );\n  };\n\n  const handleChange = (event) => {\n    console.log(\"Setting customer name = \" + event.target.value );\n    setCustomerName( event.target.value );\n  };\n\n  return (\n      <React.Fragment>\n        <Router>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\n                <MenuIcon onClick={handleMenu}/>\n              </IconButton>\n              <Menu\n                id=\"main-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={handleClose} component={Link} to='/'>Home</MenuItem>\n                <MenuItem onClick={handleClose} component={Link} to='/consumption'>Consumption</MenuItem>\n                <MenuItem onClick={handleClose} component={Link} to='/generation'>Generation</MenuItem>\n                <MenuItem onClick={handleClose} component={Link} to='/blockchain'>Blockchain</MenuItem>\n              </Menu>\n              <Typography variant=\"h6\" >\n                Sitigrid Demo\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <Switch>\n            <Route path=\"/consumption\">\n              <Customer customerName={customerName}/>\n              <Box m={4}>\n                <Typography>\n                  Consumption records:\n                </Typography>\n                <Consumption/>\n              </Box>]\n            </Route>\n            <Route path=\"/generation\">\n              <Customer  customerName={customerName}/>\n              <Box m={4}>\n                <Typography>\n                  Generation records:\n                </Typography>\n                <Generation/>\n              </Box>]\n            </Route>\n            <Route path=\"/blockchain\">\n              <Box m={4}>\n                <Typography>\n                  Blockchain: (TBD)\n                </Typography>\n              </Box>]\n            </Route>\n            <Route path=\"/\">\n              <Box m={4}>\n                <Typography>\n                  Welcome to Sitigrid!\n                </Typography>\n                <Typography>\n                  Energy Sharing for a carbon Neutral Network\n                </Typography>                \n              </Box>\n              <Box m={4}>\n                <Typography>\n                Please select a customer : \n                </Typography>\n                <FormControl>\n                  <NativeSelect\n                    value={customerName}\n                    onChange={handleChange}\n                  >\n                    <option aria-label=\"None\" value=\"\" />\n                    {listItems}\n                  </NativeSelect>\n                </FormControl>\n              </Box>\n            </Route>\n          </Switch>\n        </Router>\n      </React.Fragment>\n  );\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}