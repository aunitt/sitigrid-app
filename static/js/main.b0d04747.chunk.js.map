{"version":3,"sources":["tableStyles.js","Consumption.js","Generation.js","Customer.js","App.js","theme.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","Consumption","props","state","consumptions","console","log","this","setState","key","consumptionAmount","consumptionDate","Date","classes","length","listItems","map","consumption","component","scope","toString","align","Fragment","TableContainer","Paper","Table","className","aria-label","TableHead","TableBody","height","width","data","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","dataKey","type","stroke","fillOpacity","fill","Component","Generation","generations","generationAmount","generationDate","generation","Customer","customerName","Box","m","display","Typography","App","anchorEl","handleMenu","event","currentTarget","handleClose","AppBar","position","Toolbar","IconButton","edge","onClick","keepMounted","open","Boolean","onClose","MenuItem","Link","to","variant","path","createMuiTheme","primary","main","secondary","error","red","A400","background","default","window","location","hostname","match","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b0d04747.chunk.js","sourcesContent":["import { withStyles, makeStyles } from '@material-ui/core/styles';\nimport { TableCell, TableRow } from '@material-ui/core';\n\nexport const useStyles = makeStyles({\n    table: {\n      minWidth: 650,\n    },\n  });\n\nexport const StyledTableCell = withStyles((theme) => ({\n    head: {\n        backgroundColor: theme.palette.common.black,\n        color: theme.palette.common.white,\n    },\n    body: {\n        fontSize: 14,\n    },\n}))(TableCell);\n\nexport const StyledTableRow = withStyles((theme) => ({\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.action.hover,\n      },\n    },\n  }))(TableRow);","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis } from 'recharts';\nimport { useStyles, StyledTableCell, StyledTableRow } from './tableStyles';\n\nclass Consumption extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          consumptions: []\n        };\n    }\n\n    // TODO: fill out with fetchs for the proper items\n    // TODO: make the fetching async for better performance\n    componentDidMount() {\n        console.log(\"inside Consumption componentDidMount\");\n        this.setState( { consumptions: [\n            { key: 1588580730000, consumptionAmount: 75, consumptionDate: new Date(1588580730000) },\n            { key: 1588596856000, consumptionAmount: 50, consumptionDate: new Date(1588596856000) },\n            { key: 1588686856000, consumptionAmount: 100, consumptionDate: new Date(1588686856000) },\n            { key: 1588700199000, consumptionAmount: 80, consumptionDate: new Date(1588686856000) },\n            { key: 1588711539000, consumptionAmount: 95, consumptionDate: new Date(1588686856000) }\n        ]});\n    }\n\n    render () {\n        const classes = useStyles;\n\n        const consumptions = this.state.consumptions;\n        if(!consumptions)\n        { \n            console.log(\"Null consumptions\");\n            return null;\n        }\n\n        console.log(\"length = \" + consumptions.length);\n        const listItems = consumptions.map((consumption) =>\n        <StyledTableRow key={consumption.key}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n                {consumption.consumptionDate.toString()}\n            </StyledTableCell>\n            <StyledTableCell align=\"right\">\n                {consumption.consumptionAmount}\n            </StyledTableCell>\n        </StyledTableRow>\n        );\n\n        return (\n            <React.Fragment>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Date</StyledTableCell>\n                            <StyledTableCell align=\"right\">Electricity consumed (kWh)</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {listItems}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ResponsiveContainer height={300} width=\"95%\">\n                <AreaChart data={consumptions}  margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>\n                    <defs>\n                        <linearGradient id=\"colorCons\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"key\" />\n                    <YAxis />\n                    <Area type=\"monotone\" dataKey=\"consumptionAmount\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorCons)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n            </React.Fragment>\n        );\n    }\n  }\n\n  export default Consumption;","import React, {Component} from 'react';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ResponsiveContainer, AreaChart, Area, XAxis, YAxis } from 'recharts';\nimport { useStyles, StyledTableCell, StyledTableRow } from './tableStyles';\n\nclass Generation extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          generations: []\n        };\n    }\n\n    // TODO: fill out with fetchs for the proper items\n    // TODO: make the fetching async for better performance\n    componentDidMount() {\n        console.log(\"inside Generation componentDidMount\");\n        this.setState( { generations: [\n            { key: 1588580730000, generationAmount: 65, generationDate: new Date(1588580730000) },\n            { key: 1588596856000, generationAmount: 75, generationDate: new Date(1588596856000) },\n            { key: 1588686856000, generationAmount: 110, generationDate: new Date(1588686856000) },\n            { key: 1588700199000, generationAmount: 70, generationDate: new Date(1588686856000) },\n            { key: 1588710199000, generationAmount: 60, generationDate: new Date(1588686856000) },\n            { key: 1588711539000, generationAmount: 45, generationDate: new Date(1588686856000) }\n        ]});\n    }\n\n    render () {\n        const classes = useStyles;\n\n        const generations = this.state.generations;\n        if(!generations)\n        { \n            console.log(\"Null generations\");\n            return null;\n        }\n\n        console.log(\"length = \" + generations.length);\n        const listItems = generations.map((generation) =>\n        <StyledTableRow key={generation.key}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n                {generation.generationDate.toString()}\n            </StyledTableCell>\n            <StyledTableCell align=\"right\">\n                {generation.generationAmount}\n            </StyledTableCell>\n        </StyledTableRow>\n        );\n\n        return (\n            <React.Fragment>\n            <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell>Date</StyledTableCell>\n                            <StyledTableCell align=\"right\">Electricity generated (kWh)</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {listItems}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ResponsiveContainer height={300} width=\"95%\">\n                <AreaChart data={generations}  margin={{ top: 20, right: 30, left: 0, bottom: 0 }}>\n                    <defs>\n                        <linearGradient id=\"colorCons\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"5%\" stopColor=\"#85ed7e\" stopOpacity={0.8}/>\n                        <stop offset=\"95%\" stopColor=\"#85ed7e\" stopOpacity={0}/>\n                        </linearGradient>\n                    </defs>\n                    <XAxis dataKey=\"key\" />\n                    <YAxis />\n                    <Area type=\"monotone\" dataKey=\"generationAmount\" stroke=\"#85ed7e\" fillOpacity={1} fill=\"url(#colorCons)\" />\n                </AreaChart>\n            </ResponsiveContainer>\n            </React.Fragment>\n        );\n    }\n  }\n\n  export default Generation;","import React, {Component} from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass Customer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          customerName: \"\"\n        };\n    }\n\n    componentDidMount() {\n        console.log('componentDidMount called');\n        this.setState({customerName: \"Ashley\"});\n    }\n\n    render () {\n      return (\n        <Box m={4} component=\"div\" display=\"block\">\n            <Typography>\n                Hello {this.state.customerName}\n            </Typography>\n        </Box>\n      );\n    }\n  }\n\n  export default Customer;","import React, {Component} from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Menu, MenuItem, Box } from '@material-ui/core';\nimport { MemoryRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Consumption from './Consumption';\nimport Generation from './Generation';\nimport './App.css';\n\nimport Customer from './Customer';\n\nclass App extends Component {\n  state = {\n    anchorEl: null\n  };\n\n  handleMenu = event => {\n    this.setState({ anchorEl: event.currentTarget });\n  };\n\n  handleClose = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  render () {\n    const { classes } = this.props;\n    const { anchorEl } = this.state;\n\n    return (\n        <React.Fragment>\n          <Router>\n            <AppBar position=\"static\">\n              <Toolbar>\n                <IconButton edge=\"start\"  color=\"inherit\" aria-label=\"menu\">\n                  <MenuIcon onClick={this.handleMenu}/>\n                </IconButton>\n                <Menu\n                  id=\"main-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={this.handleClose}\n                >\n                  <MenuItem onClick={this.handleClose} component={Link} to='/'>Home</MenuItem>\n                  <MenuItem onClick={this.handleClose} component={Link} to='/consumption'>Consumption</MenuItem>\n                  <MenuItem onClick={this.handleClose} component={Link} to='/generation'>Generation</MenuItem>\n                  <MenuItem onClick={this.handleClose} component={Link} to='/blockchain'>Blockchain</MenuItem>\n                </Menu>\n                <Typography variant=\"h6\" >\n                  Sitigrid Demo\n                </Typography>\n              </Toolbar>\n            </AppBar>\n            <Customer/>\n            <Switch>\n              <Route path=\"/consumption\">\n                <Box m={4}>\n                  <Typography>\n                    Consumption records:\n                  </Typography>\n                  <Consumption/>\n                </Box>]\n              </Route>\n              <Route path=\"/generation\">\n                <Box m={4}>\n                  <Typography>\n                    Generation records:\n                  </Typography>\n                  <Generation/>\n                </Box>]\n              </Route>\n              <Route path=\"/blockchain\">\n                <Box m={4}>\n                  <Typography>\n                    Blockchain: (TBD)\n                  </Typography>\n                </Box>]\n              </Route>\n              <Route path=\"/\">\n                <Box m={4}>\n                  <Typography>\n                    Welcome to Sitigrid!\n                  </Typography>\n                  <Typography>\n                    Energy Sharing for a carbon Neutral Network\n                  </Typography>                \n                </Box>]\n              </Route>\n            </Switch>\n          </Router>\n        </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}